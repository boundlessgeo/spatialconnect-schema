// Code generated by protoc-gen-go. DO NOT EDIT.
// source: schema/Feature.proto

/*
Package schema is a generated protocol buffer package.

It is generated from these files:
	schema/Feature.proto

It has these top-level messages:
	Feature
	Operation
*/
package schema

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type OperationType int32

const (
	OperationType_INSERT OperationType = 0
	OperationType_UPDATE OperationType = 1
	OperationType_DELETE OperationType = 2
)

var OperationType_name = map[int32]string{
	0: "INSERT",
	1: "UPDATE",
	2: "DELETE",
}
var OperationType_value = map[string]int32{
	"INSERT": 0,
	"UPDATE": 1,
	"DELETE": 2,
}

func (x OperationType) String() string {
	return proto.EnumName(OperationType_name, int32(x))
}
func (OperationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Feature struct {
	Fid        string            `protobuf:"bytes,1,opt,name=fid" json:"fid,omitempty"`
	Properties map[string]string `protobuf:"bytes,2,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Geometry   []byte            `protobuf:"bytes,3,opt,name=geometry,proto3" json:"geometry,omitempty"`
}

func (m *Feature) Reset()                    { *m = Feature{} }
func (m *Feature) String() string            { return proto.CompactTextString(m) }
func (*Feature) ProtoMessage()               {}
func (*Feature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Feature) GetFid() string {
	if m != nil {
		return m.Fid
	}
	return ""
}

func (m *Feature) GetProperties() map[string]string {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Feature) GetGeometry() []byte {
	if m != nil {
		return m.Geometry
	}
	return nil
}

type Operation struct {
	Operation OperationType `protobuf:"varint,1,opt,name=operation,enum=OperationType" json:"operation,omitempty"`
	Source    string        `protobuf:"bytes,2,opt,name=source" json:"source,omitempty"`
	Feature   *Feature      `protobuf:"bytes,3,opt,name=feature" json:"feature,omitempty"`
}

func (m *Operation) Reset()                    { *m = Operation{} }
func (m *Operation) String() string            { return proto.CompactTextString(m) }
func (*Operation) ProtoMessage()               {}
func (*Operation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Operation) GetOperation() OperationType {
	if m != nil {
		return m.Operation
	}
	return OperationType_INSERT
}

func (m *Operation) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Operation) GetFeature() *Feature {
	if m != nil {
		return m.Feature
	}
	return nil
}

func init() {
	proto.RegisterType((*Feature)(nil), "Feature")
	proto.RegisterType((*Operation)(nil), "Operation")
	proto.RegisterEnum("OperationType", OperationType_name, OperationType_value)
}

func init() { proto.RegisterFile("schema/Feature.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 294 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x51, 0x4b, 0x4b, 0xc3, 0x40,
	0x10, 0x76, 0x53, 0x4c, 0xdb, 0xa9, 0xd6, 0xb0, 0x14, 0x0d, 0x3d, 0x95, 0x9e, 0x8a, 0x68, 0x84,
	0xf6, 0x52, 0x04, 0x0f, 0x96, 0xae, 0x20, 0x88, 0x96, 0x35, 0x5e, 0xbc, 0x25, 0xe9, 0xa4, 0x86,
	0x36, 0xd9, 0xb0, 0xd9, 0x08, 0xf9, 0x57, 0xfe, 0x44, 0xc9, 0x63, 0xe3, 0xe3, 0xf6, 0x3d, 0x76,
	0xbe, 0x6f, 0x87, 0x81, 0x51, 0x16, 0x7c, 0x60, 0xec, 0xdd, 0x3c, 0xa0, 0xa7, 0x72, 0x89, 0x4e,
	0x2a, 0x85, 0x12, 0xd3, 0x2f, 0x02, 0xdd, 0x46, 0xa1, 0x16, 0x74, 0xc2, 0x68, 0x6b, 0x93, 0x09,
	0x99, 0xf5, 0x79, 0x09, 0xe9, 0x12, 0x20, 0x95, 0x22, 0x45, 0xa9, 0x22, 0xcc, 0x6c, 0x63, 0xd2,
	0x99, 0x0d, 0xe6, 0xb6, 0xa3, 0x13, 0x36, 0xad, 0xc5, 0x12, 0x25, 0x0b, 0xfe, 0xeb, 0x2d, 0x1d,
	0x43, 0x6f, 0x87, 0x22, 0x46, 0x25, 0x0b, 0xbb, 0x33, 0x21, 0xb3, 0x13, 0xde, 0xf2, 0xf1, 0x1d,
	0x9c, 0xfd, 0x1b, 0x2d, 0xab, 0xf7, 0x58, 0xe8, 0xea, 0x3d, 0x16, 0x74, 0x04, 0xc7, 0x9f, 0xde,
	0x21, 0x47, 0xdb, 0xa8, 0xb4, 0x9a, 0xdc, 0x1a, 0x4b, 0x32, 0xcd, 0xa1, 0xff, 0x92, 0xa2, 0xf4,
	0x54, 0x24, 0x12, 0x7a, 0x05, 0x7d, 0xa1, 0x49, 0x35, 0x3e, 0x9c, 0x0f, 0x9d, 0xd6, 0x76, 0x8b,
	0x14, 0xf9, 0xcf, 0x03, 0x7a, 0x0e, 0x66, 0x26, 0x72, 0x19, 0xe8, 0xd4, 0x86, 0xd1, 0x29, 0x74,
	0xc3, 0x7a, 0xa9, 0xea, 0xb3, 0x83, 0x79, 0x4f, 0x2f, 0xc9, 0xb5, 0x71, 0xb9, 0x80, 0xd3, 0x3f,
	0xb9, 0x14, 0xc0, 0x7c, 0x7c, 0x7e, 0x65, 0xdc, 0xb5, 0x8e, 0x4a, 0xfc, 0xb6, 0x59, 0xdf, 0xbb,
	0xcc, 0x22, 0x25, 0x5e, 0xb3, 0x27, 0xe6, 0x32, 0xcb, 0x58, 0x5d, 0xc3, 0x45, 0x20, 0x62, 0xc7,
	0x17, 0x79, 0xb2, 0x3d, 0x60, 0x96, 0xed, 0x50, 0x38, 0xf5, 0x1d, 0x56, 0xd0, 0x34, 0x6c, 0xfc,
	0xf0, 0xdd, 0xac, 0x35, 0xdf, 0xac, 0x8e, 0xb2, 0xf8, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x1d, 0xed,
	0x3d, 0x7d, 0xac, 0x01, 0x00, 0x00,
}
